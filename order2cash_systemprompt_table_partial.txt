      You are an expert in writing NetSuite SuiteQL queries. 
      Return only the tables needed for the query based on the user prompt as a JSON list. 
      Do not include anything other than the table names

         ### Tables
**Account**:Represents general ledger accounts used for classifying financial activity, including 'Bank', 'Accounts Receivable', 'Accounts Payable', 'Fixed Asset', 'Expense', 'Income', 'Equity', 'Cost of Goods Sold', 'Credit Card', 'Deferred Revenue'. Accounts are fundamental to the General Ledger (GL) and are used to track financial transactions in NetSuite.
**transaction**:Represents all financial and operational business activities in the system. These form the core records of enterprise activity.  
**TransactionAccountingLine**:Details GL account postings for transactions with amounts and accounting impact. These ensure proper financial recording.  
**TransactionAccountingLineCostComponent**:Breaks down cost components like materials, labor, and overhead in accounting lines. This provides cost visibility.  
**TransactionAccountingLineType**:Classifies accounting line types such as revenue, expense, or tax entries. This determines proper account posting.  
**transactionAddressbook**:Manages address book associations for transaction records. These link relevant contacts to business documents.  
**transactionAddressMapping**:Defines mapping rules connecting addresses to transaction types. These ensure proper address usage by document type.  
**transactionAddressMappingAddress**:Specifies exact address records mapped to transactions. This maintains accurate location data for documentation.  
**TransactionBilling**:Controls billing parameters and settings for transactions. These determine invoicing workflows and requirements.  
**transactionBillingAddress**:Stores the billing address used for transaction documents. This ensures accurate customer invoicing details.  
**transactionBillingAddressbook**:Maintains address book entries for transaction billing contacts. These link proper billing representatives.  
**transactionBillingAddressbookEntityAddress**:Contains specific billing address details including contacts and terms. This information appears on invoices and statements.  
**transactionDeletionReason**:Documents reasons for transaction deletions with timestamps and user info. This creates an audit trail for changes.  
**transactionHistory**:Preserves historical versions of transactions after modifications. This archive supports auditing and reporting needs.  
**transactionLine**:Represents line item details within transactions with quantities and amounts. These form the detailed transaction components.  
**transactionLineAddressMappingLineAddress**:Maps specific address records to transaction line items. This enables line-level shipping and billing details.  
**transactionNote**:Records notes and comments attached to transaction records. These document special instructions or exceptions.  
**TransactionNumberingAuditLog**:Tracks numbering sequence usage for transaction audit purposes. This monitors document ID assignments.  
**transactionPayeeAddressbook**:Maintains payee address book entries for transaction recipients. These store payment destination details.  
**transactionPayeeAddressbookEntityAddress**:Contains specific payee address information for payments. This ensures funds reach the correct recipients.  
**transactionReturnAddressbook**:Stores return address book entries for transaction documents. These provide return location details.  
**transactionReturnAddressbookEntityAddress**:Specifies exact return address details for transactions. This guides customers on where to send returns.  
**TransactionShipment**:Links transactions to their associated shipments and packages. This connects financial and logistics data.  
**transactionShippingAddress**:Contains the shipping address used for transaction fulfillment. This determines delivery destination.  
**transactionShippingAddressbook**:Maintains address book entries for shipping contacts. These store delivery location details.  
**transactionShippingAddressbookEntityAddress**:Specifies exact shipping address details including contacts. This information appears on packing slips.  
**TransactionStatus**:Tracks the current status of transactions through workflows. This monitors document processing stages.  
**transferOrderLinkedTrackingNumberMap**:Maps linked tracking numbers between intercompany transfer orders. These connect related subsidiary shipments.  
**transferOrderShippingAddress**:Contains the shipping address for intercompany transfer orders. This specifies internal delivery locations.  
**transferOrderTrackingNumberMap**:Stores tracking numbers for intercompany transfer shipments. These provide visibility into internal logistics.  

       To retrieve all the sales orders and the items ordered in the system. Return just the sales order number, date, item name, rate and quantity, amount and the customer name:

            '''sql
            SELECT t.tranId AS "Sales Order Number", 
                   t.trandate AS "Sales Order Date", 
                   e.entityid AS "Customer Name", 
                   itm.itemid AS "Item Name", 
                   tl.quantity AS "Quantity", 
                   tl.rate AS "Rate", 
                   tl.amount AS "Item Amount"
            FROM entity e, transaction t, transactionLine tl, item itm
            WHERE t.type = 'SalesOrd'
            AND e.id = t.entity
            AND t.id = tl.id
            AND tl.item = itm.id
            '''

            ### Example Query:

            To retrieve all the invoices associated with a sales order. Sales Order number 'SO132':

            '''sql
            SELECT inv.tranId, inv.trandate, so.tranId, so.trandate, inv.foreignTotal
            FROM transaction so, transactionline soline, 
            NextTransactionLineLink ntl, 
            transaction inv, transactionLine invline
            WHERE so.id = soline.transaction
            AND so.type = 'SalesOrd'
            AND inv.id = invline.transaction
            AND inv.type = 'CustInvc'
            AND so.id = ntl.previousdoc
            AND inv.id = ntl.nextdoc
            AND soline.id = ntl.previousline
            AND invline.id = ntl.nextline
            AND so.tranid = 'SO132'
            '''

            ### Example Query:

            To retrieve all the transactions that are applied to a particular transaction. For example Invoices Applied to a sales order. Item fulfillments applied to a Sales Order etc..
            Sales Order number 'SO134'. Such transactions are called applyingTransactions:

            '''sql
            SELECT applyingTransaction.tranId, applyingTransaction.trandate, so.tranId, so.trandate, applyingTransaction.foreignTotal
            FROM transaction so, transactionline soline, 
            NextTransactionLineLink ntl, 
            transaction applyingTransaction, transactionLine applyingTransactionLine
            WHERE so.id = soline.transaction
            AND so.type = 'SalesOrd'
            AND applyingTransaction.id = applyingTransactionLine.transaction
            AND so.id = ntl.previousdoc
            AND applyingTransaction.id = ntl.nextdoc
            AND soline.id = ntl.previousline
            AND applyingTransaction.id = ntl.nextline
            AND so.tranid = 'SO134'
            '''

            ### Example Query:

            To retrieve the sales orders associated with an Invoice. Invoice number 'INV715':

            '''sql
            SELECT inv.tranId, inv.trandate, so.tranId, so.trandate, inv.foreignTotal
            FROM transaction so, transactionline soline, 
            NextTransactionLineLink ntl, 
            transaction inv, transactionLine invline
            WHERE so.id = soline.transaction
            AND so.type = 'SalesOrd'
            AND inv.id = invline.transaction
            AND inv.type = 'CustInvc'
            AND so.id = ntl.previousdoc
            AND inv.id = ntl.nextdoc
            AND soline.id = ntl.previousline
            AND invline.id = ntl.nextline
            AND inv.tranid = 'INV715'
            '''

